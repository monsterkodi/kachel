// koffee 1.3.0

/*
 0000000  000   000   0000000  000  000   000  00000000   0000000   
000        000 000   000       000  0000  000  000       000   000  
0000000     00000    0000000   000  000 0 000  000000    000   000  
     000     000          000  000  000  0000  000       000   000  
0000000      000     0000000   000  000   000  000        0000000
 */
var Kachel, Sysinfo, _, elem, ref, utils,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

ref = require('kxk'), elem = ref.elem, _ = ref._;

utils = require('./utils');

Kachel = require('./kachel');

Sysinfo = (function(superClass) {
    extend(Sysinfo, superClass);

    function Sysinfo(arg) {
        var ref1;
        this.kachelId = (ref1 = arg.kachelId) != null ? ref1 : 'sysinfo';
        this.rx_max = 0;
        this.tx_max = 0;
        this.r_max = 0;
        this.w_max = 0;
        this.hist_length = 100;
        this.load_hist_usr = [];
        this.load_hist_sys = [];
        this.rx_hist = [];
        this.tx_hist = [];
        this.r_hist = [];
        this.w_hist = [];
        arguments[0] = _.defaults({kachelId:this.kachelId}, arguments[0]); Sysinfo.__super__.constructor.apply(this, arguments);
        post.toMain('requestData', 'sysdata', this.id);
        post.on('data', this.onData);
    }

    Sysinfo.prototype.onData = function(data) {
        var pie, r_sec, rx_sec, svg, tx_sec, w_sec;
        this.main.innerHTML = '';
        svg = utils.svg({
            clss: 'clock'
        });
        this.main.appendChild(svg);
        if (data.disksIO != null) {
            r_sec = data.disksIO.rIO_sec;
            w_sec = data.disksIO.wIO_sec;
            this.r_max = Math.max(this.r_max, r_sec);
            this.w_max = Math.max(this.w_max, w_sec);
            this.r_hist.push(r_sec);
            this.w_hist.push(w_sec);
            while (this.r_hist.length > this.hist_length) {
                this.r_hist.shift();
            }
            while (this.w_hist.length > this.hist_length) {
                this.w_hist.shift();
            }
            pie = utils.circle({
                clss: 'sysinfo_disk_bgr',
                svg: svg
            });
            utils.pie({
                svg: pie,
                clss: 'sysinfo_disk_read',
                angle: 180 * r_sec / this.r_max
            });
            utils.pie({
                svg: pie,
                clss: 'sysinfo_disk_write',
                angle: 180 * w_sec / this.w_max,
                start: 180
            });
        }
        rx_sec = data.networkStats[0].rx_sec;
        tx_sec = data.networkStats[0].tx_sec;
        this.rx_max = Math.max(this.rx_max, rx_sec);
        this.tx_max = Math.max(this.tx_max, tx_sec);
        this.tx_hist.push(tx_sec);
        this.rx_hist.push(rx_sec);
        while (this.tx_hist.length > this.hist_length) {
            this.tx_hist.shift();
        }
        while (this.r_hist.length > this.hist_length) {
            this.r_hist.shift();
        }
        pie = utils.circle({
            radius: 47,
            clss: 'sysinfo_net_bgr',
            svg: svg
        });
        utils.pie({
            svg: pie,
            radius: 47,
            clss: 'sysinfo_net_recv',
            angle: 180 * rx_sec / this.rx_max
        });
        utils.pie({
            svg: pie,
            radius: 47,
            clss: 'sysinfo_net_send',
            angle: 180 * tx_sec / this.tx_max,
            start: 180
        });
        this.load_hist_sys.push(data.currentLoad.currentload / 100);
        this.load_hist_usr.push(data.currentLoad.currentload_user / 100);
        while (this.load_hist_sys.length > this.hist_length) {
            this.load_hist_sys.shift();
        }
        while (this.load_hist_usr.length > this.hist_length) {
            this.load_hist_usr.shift();
        }
        pie = utils.circle({
            radius: 44,
            clss: 'sysinfo_load_bgr',
            svg: svg
        });
        utils.pie({
            svg: pie,
            radius: 44,
            clss: 'sysinfo_load_sys',
            angle: 360 * data.currentLoad.currentload / 100
        });
        utils.pie({
            svg: pie,
            radius: 44,
            clss: 'sysinfo_load_usr',
            angle: 360 * data.currentLoad.currentload_user / 100
        });
        pie = utils.circle({
            radius: 18,
            clss: 'sysinfo_mem_bgr',
            svg: svg
        });
        utils.pie({
            svg: pie,
            radius: 18,
            clss: 'sysinfo_mem_used',
            angle: 360 * data.mem.used / data.mem.total
        });
        return utils.pie({
            svg: pie,
            radius: 18,
            clss: 'sysinfo_mem_active',
            angle: 360 * data.mem.active / data.mem.total
        });
    };

    return Sysinfo;

})(Kachel);

module.exports = Sysinfo;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/sysinfo.coffee