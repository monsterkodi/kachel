// koffee 1.2.0

/*
 0000000  000   000   0000000  000  000   000  00000000   0000000   
000        000 000   000       000  0000  000  000       000   000  
0000000     00000    0000000   000  000 0 000  000000    000   000  
     000     000          000  000  000  0000  000       000   000  
0000000      000     0000000   000  000   000  000        0000000
 */
var Kachel, Sysinfo, _, elem, ref, sysinfo, utils,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

ref = require('kxk'), elem = ref.elem, _ = ref._;

utils = require('./utils');

Kachel = require('./kachel');

sysinfo = require('systeminformation');

Sysinfo = (function(superClass) {
    extend(Sysinfo, superClass);

    function Sysinfo(arg) {
        var ref1;
        this.kachelId = (ref1 = arg.kachelId) != null ? ref1 : 'sysinfo';
        this.rx_max = 0;
        this.tx_max = 0;
        this.r_max = 0;
        this.w_max = 0;
        arguments[0] = _.defaults({kachelId:this.kachelId}, arguments[0]); Sysinfo.__super__.constructor.apply(this, arguments);
    }

    Sysinfo.prototype.onLoad = function() {
        var grid, info;
        grid = elem('div', {
            "class": 'grid2x2',
            children: [
                elem('div', {
                    "class": 'grid2x2_11'
                }), elem('div', {
                    "class": 'grid2x2_12'
                }), elem('div', {
                    "class": 'grid2x2_21'
                }), elem('div', {
                    "class": 'grid2x2_22'
                })
            ]
        });
        this.main.appendChild(grid);
        info = (function(_this) {
            return function() {
                return sysinfo.getDynamicData(function(data) {
                    var pie, r_sec, rx_sec, tx_sec, w_sec;
                    console.log(data);
                    grid.childNodes[0].innerHTML = '';
                    pie = utils.circle({
                        fill: '#44f'
                    });
                    utils.pie({
                        svg: pie,
                        fill: '#080',
                        angle: 360 * data.currentLoad.currentload / 100
                    });
                    utils.pie({
                        svg: pie,
                        fill: '#f80',
                        angle: 360 * data.currentLoad.currentload_user / 100
                    });
                    grid.childNodes[0].appendChild(pie);
                    grid.childNodes[1].innerHTML = '';
                    pie = utils.circle({
                        fill: '#44f'
                    });
                    utils.pie({
                        svg: pie,
                        fill: '#88f',
                        angle: 360 * data.mem.used / data.mem.total
                    });
                    utils.pie({
                        svg: pie,
                        fill: '#f80',
                        angle: 360 * data.mem.active / data.mem.total
                    });
                    grid.childNodes[1].appendChild(pie);
                    rx_sec = data.networkStats[0].rx_sec;
                    tx_sec = data.networkStats[0].tx_sec;
                    _this.rx_max = Math.max(_this.rx_max, rx_sec);
                    _this.tx_max = Math.max(_this.tx_max, tx_sec);
                    grid.childNodes[2].innerHTML = '';
                    pie = utils.circle({
                        fill: '#44f'
                    });
                    utils.pie({
                        svg: pie,
                        fill: '#88f',
                        angle: 180 * rx_sec / _this.rx_max
                    });
                    utils.pie({
                        svg: pie,
                        fill: '#f80',
                        angle: 180 * tx_sec / _this.tx_max,
                        start: 180
                    });
                    grid.childNodes[2].appendChild(pie);
                    r_sec = data.disksIO.rIO_sec;
                    w_sec = data.disksIO.wIO_sec;
                    _this.r_max = Math.max(_this.r_max, r_sec);
                    _this.w_max = Math.max(_this.w_max, w_sec);
                    grid.childNodes[3].innerHTML = '';
                    pie = utils.circle({
                        fill: '#44f'
                    });
                    utils.pie({
                        svg: pie,
                        fill: '#88f',
                        angle: 180 * r_sec / _this.r_max
                    });
                    utils.pie({
                        svg: pie,
                        fill: '#f80',
                        angle: 180 * w_sec / _this.w_max,
                        start: 180
                    });
                    return grid.childNodes[3].appendChild(pie);
                });
            };
        })(this);
        return setInterval(info, 1000);
    };

    return Sysinfo;

})(Kachel);

module.exports = Sysinfo;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/sysinfo.coffee