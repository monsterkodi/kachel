// koffee 1.3.0

/*
00     00   0000000   000  000   000
000   000  000   000  000  0000  000
000000000  000000000  000  000 0 000
000 0 000  000   000  000  000  0000
000   000  000   000  000  000   000
 */
var Bounds, BrowserWindow, KachelApp, activeWin, app, clamp, electron, empty, focusKachel, kachelSize, kachelSizes, kacheln, klog, mainWin, neighborWin, onWinBlur, onWinFocus, os, post, prefs, raiseWin, raised, raising, ref, shortcut, slash, winEvents, winWithId, wins;

ref = require('kxk'), post = ref.post, prefs = ref.prefs, slash = ref.slash, clamp = ref.clamp, empty = ref.empty, klog = ref.klog, app = ref.app, os = ref.os;

Bounds = require('./bounds');

electron = require('electron');

BrowserWindow = electron.BrowserWindow;

kachelSizes = [72, 108, 144, 216];

kachelSize = 1;

mainWin = null;

winEvents = function(win) {
    win.on('focus', onWinFocus);
    win.on('blur', onWinBlur);
    return win.setHasShadow(false);
};

shortcut = slash.win() && 'ctrl+alt+k' || 'command+alt+k';

KachelApp = new app({
    dir: __dirname,
    pkg: require('../package.json'),
    shortcut: shortcut,
    index: 'mainwin.html',
    icon: '../img/app.ico',
    tray: '../img/menu.png',
    about: '../img/about.png',
    minWidth: 50,
    minHeight: 50,
    maxWidth: 50,
    maxHeight: 50,
    width: 50,
    height: 50,
    acceptFirstMouse: true,
    prefsSeperator: 'â–¸',
    onOtherInstance: function() {
        return post.emit('raiseKacheln');
    },
    onShortcut: function() {
        return post.emit('raiseKacheln');
    },
    resizable: false,
    maximizable: false,
    saveBounds: false,
    onWinReady: function(win) {
        var kachelData, kachelId, ref1, results;
        mainWin = win;
        winEvents(win);
        ref1 = prefs.get('kacheln', {});
        results = [];
        for (kachelId in ref1) {
            kachelData = ref1[kachelId];
            if (kachelId !== 'appl' && kachelId !== 'folder') {
                results.push(post.emit('newKachel', kachelData));
            } else {
                results.push(void 0);
            }
        }
        return results;
    }
});

post.on('newKachel', function(arg) {
    var data, html, ref1, ref2, win;
    html = (ref1 = arg.html) != null ? ref1 : 'default', data = (ref2 = arg.data) != null ? ref2 : null;
    win = new electron.BrowserWindow({
        movable: true,
        transparent: true,
        autoHideMenuBar: true,
        acceptFirstMouse: true,
        transparent: true,
        hasShadow: false,
        frame: false,
        resizable: false,
        maximizable: false,
        minimizable: false,
        fullscreen: false,
        show: false,
        fullscreenenable: false,
        backgroundColor: '#181818',
        width: kachelSizes[kachelSize],
        height: kachelSizes[kachelSize],
        webPreferences: {
            nodeIntegration: true
        }
    });
    win.loadURL("file://" + __dirname + "/../js/" + html + ".html");
    win.webContents.on('dom-ready', function(event) {
        if (data != null) {
            post.toWin(win.id, 'initData', data);
        }
        return win.show();
    });
    winEvents(win);
    return win;
});

post.on('arrange', function() {
    return Bounds.arrange(kacheln());
});

post.on('snapKachel', function(wid) {
    return Bounds.snap(kacheln(), winWithId(wid));
});

post.on('kachelSize', function(action, wid) {
    var b, i, k, len, results, size, w;
    if (wid) {
        size = 0;
        while (kachelSizes[size] < winWithId(wid).getBounds().width) {
            size++;
        }
    } else {
        size = kachelSize;
    }
    switch (action) {
        case 'increase':
            size += 1;
            break;
        case 'decrease':
            size -= 1;
            break;
        case 'reset':
            size = 1;
    }
    size = clamp(0, kachelSizes.length - 1, size);
    if (wid) {
        k = [winWithId(wid)];
    } else {
        k = kacheln();
        kachelSize = size;
    }
    results = [];
    for (i = 0, len = k.length; i < len; i++) {
        w = k[i];
        b = w.getBounds();
        b.width = kachelSizes[size];
        b.height = kachelSizes[size];
        w.setBounds(b);
        results.push(Bounds.snap(kacheln(), w));
    }
    return results;
});

raised = false;

raising = false;

post.on('raiseKacheln', function() {
    var i, j, l, len, len1, len2, ref1, ref2, ref3, win;
    ref1 = kacheln();
    for (i = 0, len = ref1.length; i < len; i++) {
        win = ref1[i];
        if (!win.isVisible()) {
            raised = false;
            break;
        }
    }
    raising = true;
    if (raised) {
        ref2 = kacheln();
        for (j = 0, len1 = ref2.length; j < len1; j++) {
            win = ref2[j];
            win.hide();
        }
        raised = false;
        raising = false;
        return;
    }
    ref3 = kacheln().concat([mainWin]);
    for (l = 0, len2 = ref3.length; l < len2; l++) {
        win = ref3[l];
        if (os.platform() === 'win32') {
            raiseWin(win);
        } else {
            win.showInactive();
        }
    }
    raised = true;
    raiseWin(typeof focusKachel !== "undefined" && focusKachel !== null ? focusKachel : mainWin);
    return raising = false;
});

raiseWin = function(win) {
    win.showInactive();
    return win.focus();
};

post.on('quit', KachelApp.quitApp);

post.on('focusKachel', function(winId, direction) {
    return raiseWin(neighborWin(winId, direction));
});

focusKachel = null;

post.on('kachelFocus', function(winId) {
    if (winId !== mainWin.id && !raising) {
        return focusKachel = winWithId(winId);
    }
});

onWinBlur = function(event) {
    if (!raising && event.sender === focusKachel) {
        return raised = false;
    }
};

onWinFocus = function(event) {
    if (!raising) {
        return raised = true;
    }
};

wins = function() {
    return BrowserWindow.getAllWindows().sort(function(a, b) {
        return a.id - b.id;
    });
};

activeWin = function() {
    return BrowserWindow.getFocusedWindow();
};

kacheln = function() {
    return wins().filter(function(w) {
        return w !== mainWin;
    });
};

winWithId = function(id) {
    return BrowserWindow.fromId(id);
};

neighborWin = function(winId, direction) {
    var kachel, kb, ks;
    kachel = winWithId(winId);
    kb = kachel.getBounds();
    ks = kacheln().filter(function(k) {
        return k !== kachel;
    });
    ks = ks.filter(function(k) {
        var b;
        b = k.getBounds();
        switch (direction) {
            case 'right':
                return b.x >= kb.x + kb.width;
            case 'down':
                return b.y >= kb.y + kb.height;
            case 'left':
                return kb.x >= b.x + b.width;
            case 'up':
                return kb.y >= b.y + b.height;
        }
    });
    if (empty(ks)) {
        return kachel;
    }
    ks.sort(function(a, b) {
        var ab, bb;
        ab = a.getBounds();
        bb = b.getBounds();
        switch (direction) {
            case 'right':
                a = Math.abs((kb.y + kb.height / 2) - (ab.y + ab.height / 2)) + (ab.x - kb.x);
                b = Math.abs((kb.y + kb.height / 2) - (bb.y + bb.height / 2)) + (bb.x - kb.x);
                break;
            case 'left':
                a = Math.abs((kb.y + kb.height / 2) - (ab.y + ab.height / 2)) + (kb.x - ab.x);
                b = Math.abs((kb.y + kb.height / 2) - (bb.y + bb.height / 2)) + (kb.x - bb.x);
                break;
            case 'down':
                a = Math.abs((kb.x + kb.width / 2) - (ab.x + ab.width / 2)) + (ab.y - kb.y);
                b = Math.abs((kb.x + kb.width / 2) - (bb.x + bb.width / 2)) + (bb.y - kb.y);
                break;
            case 'up':
                a = Math.abs((kb.x + kb.width / 2) - (ab.x + ab.width / 2)) + (kb.y - ab.y);
                b = Math.abs((kb.x + kb.width / 2) - (bb.x + bb.width / 2)) + (kb.y - bb.y);
        }
        return a - b;
    });
    return ks[0];
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7OztBQUFBLElBQUE7O0FBUUEsTUFBc0QsT0FBQSxDQUFRLEtBQVIsQ0FBdEQsRUFBRSxlQUFGLEVBQVEsaUJBQVIsRUFBZSxpQkFBZixFQUFzQixpQkFBdEIsRUFBNkIsaUJBQTdCLEVBQW9DLGVBQXBDLEVBQTBDLGFBQTFDLEVBQStDOztBQUUvQyxNQUFBLEdBQVcsT0FBQSxDQUFRLFVBQVI7O0FBQ1gsUUFBQSxHQUFXLE9BQUEsQ0FBUSxVQUFSOztBQUNYLGFBQUEsR0FBZ0IsUUFBUSxDQUFDOztBQUV6QixXQUFBLEdBQWMsQ0FBQyxFQUFELEVBQUksR0FBSixFQUFRLEdBQVIsRUFBWSxHQUFaOztBQUNkLFVBQUEsR0FBYzs7QUFDZCxPQUFBLEdBQVU7O0FBRVYsU0FBQSxHQUFZLFNBQUMsR0FBRDtJQUNSLEdBQUcsQ0FBQyxFQUFKLENBQU8sT0FBUCxFQUFnQixVQUFoQjtJQUNBLEdBQUcsQ0FBQyxFQUFKLENBQU8sTUFBUCxFQUFnQixTQUFoQjtXQUNBLEdBQUcsQ0FBQyxZQUFKLENBQWlCLEtBQWpCO0FBSFE7O0FBS1osUUFBQSxHQUFXLEtBQUssQ0FBQyxHQUFOLENBQUEsQ0FBQSxJQUFnQixZQUFoQixJQUFnQzs7QUFFM0MsU0FBQSxHQUFZLElBQUksR0FBSixDQUNSO0lBQUEsR0FBQSxFQUFvQixTQUFwQjtJQUNBLEdBQUEsRUFBb0IsT0FBQSxDQUFRLGlCQUFSLENBRHBCO0lBRUEsUUFBQSxFQUFvQixRQUZwQjtJQUdBLEtBQUEsRUFBb0IsY0FIcEI7SUFJQSxJQUFBLEVBQW9CLGdCQUpwQjtJQUtBLElBQUEsRUFBb0IsaUJBTHBCO0lBTUEsS0FBQSxFQUFvQixrQkFOcEI7SUFPQSxRQUFBLEVBQW9CLEVBUHBCO0lBUUEsU0FBQSxFQUFvQixFQVJwQjtJQVNBLFFBQUEsRUFBb0IsRUFUcEI7SUFVQSxTQUFBLEVBQW9CLEVBVnBCO0lBV0EsS0FBQSxFQUFvQixFQVhwQjtJQVlBLE1BQUEsRUFBb0IsRUFacEI7SUFhQSxnQkFBQSxFQUFvQixJQWJwQjtJQWNBLGNBQUEsRUFBb0IsR0FkcEI7SUFlQSxlQUFBLEVBQW9CLFNBQUE7ZUFBRyxJQUFJLENBQUMsSUFBTCxDQUFVLGNBQVY7SUFBSCxDQWZwQjtJQWdCQSxVQUFBLEVBQW9CLFNBQUE7ZUFBRyxJQUFJLENBQUMsSUFBTCxDQUFVLGNBQVY7SUFBSCxDQWhCcEI7SUFpQkEsU0FBQSxFQUFvQixLQWpCcEI7SUFrQkEsV0FBQSxFQUFvQixLQWxCcEI7SUFtQkEsVUFBQSxFQUFvQixLQW5CcEI7SUFvQkEsVUFBQSxFQUFZLFNBQUMsR0FBRDtBQUVSLFlBQUE7UUFBQSxPQUFBLEdBQVU7UUFDVixTQUFBLENBQVUsR0FBVjtBQUVBO0FBQUE7YUFBQSxnQkFBQTs7WUFDSSxJQUFHLFFBQUEsS0FBaUIsTUFBakIsSUFBQSxRQUFBLEtBQXdCLFFBQTNCOzZCQUNJLElBQUksQ0FBQyxJQUFMLENBQVUsV0FBVixFQUFzQixVQUF0QixHQURKO2FBQUEsTUFBQTtxQ0FBQTs7QUFESjs7SUFMUSxDQXBCWjtDQURROztBQW9DWixJQUFJLENBQUMsRUFBTCxDQUFRLFdBQVIsRUFBb0IsU0FBQyxHQUFEO0FBRWhCLFFBQUE7SUFGaUIsMENBQUssV0FBVywwQ0FBRztJQUVwQyxHQUFBLEdBQU0sSUFBSSxRQUFRLENBQUMsYUFBYixDQUVGO1FBQUEsT0FBQSxFQUFvQixJQUFwQjtRQUNBLFdBQUEsRUFBb0IsSUFEcEI7UUFFQSxlQUFBLEVBQW9CLElBRnBCO1FBR0EsZ0JBQUEsRUFBb0IsSUFIcEI7UUFJQSxXQUFBLEVBQW9CLElBSnBCO1FBS0EsU0FBQSxFQUFvQixLQUxwQjtRQU1BLEtBQUEsRUFBb0IsS0FOcEI7UUFPQSxTQUFBLEVBQW9CLEtBUHBCO1FBUUEsV0FBQSxFQUFvQixLQVJwQjtRQVNBLFdBQUEsRUFBb0IsS0FUcEI7UUFVQSxVQUFBLEVBQW9CLEtBVnBCO1FBV0EsSUFBQSxFQUFvQixLQVhwQjtRQVlBLGdCQUFBLEVBQW9CLEtBWnBCO1FBYUEsZUFBQSxFQUFvQixTQWJwQjtRQWNBLEtBQUEsRUFBb0IsV0FBWSxDQUFBLFVBQUEsQ0FkaEM7UUFlQSxNQUFBLEVBQW9CLFdBQVksQ0FBQSxVQUFBLENBZmhDO1FBZ0JBLGNBQUEsRUFDSTtZQUFBLGVBQUEsRUFBaUIsSUFBakI7U0FqQko7S0FGRTtJQXFCTixHQUFHLENBQUMsT0FBSixDQUFZLFNBQUEsR0FBVSxTQUFWLEdBQW9CLFNBQXBCLEdBQTZCLElBQTdCLEdBQWtDLE9BQTlDO0lBRUEsR0FBRyxDQUFDLFdBQVcsQ0FBQyxFQUFoQixDQUFtQixXQUFuQixFQUErQixTQUFDLEtBQUQ7UUFDM0IsSUFBc0MsWUFBdEM7WUFBQSxJQUFJLENBQUMsS0FBTCxDQUFXLEdBQUcsQ0FBQyxFQUFmLEVBQW1CLFVBQW5CLEVBQThCLElBQTlCLEVBQUE7O2VBQ0EsR0FBRyxDQUFDLElBQUosQ0FBQTtJQUYyQixDQUEvQjtJQUlBLFNBQUEsQ0FBVSxHQUFWO1dBQ0E7QUE5QmdCLENBQXBCOztBQXNDQSxJQUFJLENBQUMsRUFBTCxDQUFRLFNBQVIsRUFBa0IsU0FBQTtXQUFHLE1BQU0sQ0FBQyxPQUFQLENBQWUsT0FBQSxDQUFBLENBQWY7QUFBSCxDQUFsQjs7QUFFQSxJQUFJLENBQUMsRUFBTCxDQUFRLFlBQVIsRUFBcUIsU0FBQyxHQUFEO1dBQVMsTUFBTSxDQUFDLElBQVAsQ0FBWSxPQUFBLENBQUEsQ0FBWixFQUF1QixTQUFBLENBQVUsR0FBVixDQUF2QjtBQUFULENBQXJCOztBQVFBLElBQUksQ0FBQyxFQUFMLENBQVEsWUFBUixFQUFxQixTQUFDLE1BQUQsRUFBUyxHQUFUO0FBRWpCLFFBQUE7SUFBQSxJQUFHLEdBQUg7UUFDSSxJQUFBLEdBQU87QUFDUCxlQUFNLFdBQVksQ0FBQSxJQUFBLENBQVosR0FBb0IsU0FBQSxDQUFVLEdBQVYsQ0FBYyxDQUFDLFNBQWYsQ0FBQSxDQUEwQixDQUFDLEtBQXJEO1lBQ0ksSUFBQTtRQURKLENBRko7S0FBQSxNQUFBO1FBS0ksSUFBQSxHQUFPLFdBTFg7O0FBT0EsWUFBTyxNQUFQO0FBQUEsYUFDUyxVQURUO1lBQ3lCLElBQUEsSUFBUTtBQUF4QjtBQURULGFBRVMsVUFGVDtZQUV5QixJQUFBLElBQVE7QUFBeEI7QUFGVCxhQUdTLE9BSFQ7WUFHeUIsSUFBQSxHQUFRO0FBSGpDO0lBS0EsSUFBQSxHQUFPLEtBQUEsQ0FBTSxDQUFOLEVBQVEsV0FBVyxDQUFDLE1BQVosR0FBbUIsQ0FBM0IsRUFBNkIsSUFBN0I7SUFFUCxJQUFHLEdBQUg7UUFDSSxDQUFBLEdBQUksQ0FBQyxTQUFBLENBQVUsR0FBVixDQUFELEVBRFI7S0FBQSxNQUFBO1FBR0ksQ0FBQSxHQUFJLE9BQUEsQ0FBQTtRQUNKLFVBQUEsR0FBYSxLQUpqQjs7QUFNQTtTQUFBLG1DQUFBOztRQUNJLENBQUEsR0FBSSxDQUFDLENBQUMsU0FBRixDQUFBO1FBQ0osQ0FBQyxDQUFDLEtBQUYsR0FBVyxXQUFZLENBQUEsSUFBQTtRQUN2QixDQUFDLENBQUMsTUFBRixHQUFXLFdBQVksQ0FBQSxJQUFBO1FBQ3ZCLENBQUMsQ0FBQyxTQUFGLENBQVksQ0FBWjtxQkFDQSxNQUFNLENBQUMsSUFBUCxDQUFZLE9BQUEsQ0FBQSxDQUFaLEVBQXVCLENBQXZCO0FBTEo7O0FBdEJpQixDQUFyQjs7QUFtQ0EsTUFBQSxHQUFVOztBQUNWLE9BQUEsR0FBVTs7QUFFVixJQUFJLENBQUMsRUFBTCxDQUFRLGNBQVIsRUFBdUIsU0FBQTtBQUVuQixRQUFBO0FBQUE7QUFBQSxTQUFBLHNDQUFBOztRQUNJLElBQUcsQ0FBSSxHQUFHLENBQUMsU0FBSixDQUFBLENBQVA7WUFDSSxNQUFBLEdBQVM7QUFDVCxrQkFGSjs7QUFESjtJQUtBLE9BQUEsR0FBVTtJQUNWLElBQUcsTUFBSDtBQUNJO0FBQUEsYUFBQSx3Q0FBQTs7WUFDSSxHQUFHLENBQUMsSUFBSixDQUFBO0FBREo7UUFFQSxNQUFBLEdBQVU7UUFDVixPQUFBLEdBQVU7QUFDVixlQUxKOztBQU9BO0FBQUEsU0FBQSx3Q0FBQTs7UUFDSSxJQUFHLEVBQUUsQ0FBQyxRQUFILENBQUEsQ0FBQSxLQUFpQixPQUFwQjtZQUNJLFFBQUEsQ0FBUyxHQUFULEVBREo7U0FBQSxNQUFBO1lBR0ksR0FBRyxDQUFDLFlBQUosQ0FBQSxFQUhKOztBQURKO0lBS0EsTUFBQSxHQUFTO0lBQ1QsUUFBQSw4REFBUyxjQUFjLE9BQXZCO1dBQ0EsT0FBQSxHQUFVO0FBdEJTLENBQXZCOztBQXdCQSxRQUFBLEdBQVcsU0FBQyxHQUFEO0lBQ1AsR0FBRyxDQUFDLFlBQUosQ0FBQTtXQUNBLEdBQUcsQ0FBQyxLQUFKLENBQUE7QUFGTzs7QUFJWCxJQUFJLENBQUMsRUFBTCxDQUFRLE1BQVIsRUFBZSxTQUFTLENBQUMsT0FBekI7O0FBUUEsSUFBSSxDQUFDLEVBQUwsQ0FBUSxhQUFSLEVBQXNCLFNBQUMsS0FBRCxFQUFRLFNBQVI7V0FBc0IsUUFBQSxDQUFTLFdBQUEsQ0FBWSxLQUFaLEVBQW1CLFNBQW5CLENBQVQ7QUFBdEIsQ0FBdEI7O0FBRUEsV0FBQSxHQUFjOztBQUNkLElBQUksQ0FBQyxFQUFMLENBQVEsYUFBUixFQUFzQixTQUFDLEtBQUQ7SUFDbEIsSUFBRyxLQUFBLEtBQVMsT0FBTyxDQUFDLEVBQWpCLElBQXdCLENBQUksT0FBL0I7ZUFDSSxXQUFBLEdBQWMsU0FBQSxDQUFVLEtBQVYsRUFEbEI7O0FBRGtCLENBQXRCOztBQUlBLFNBQUEsR0FBWSxTQUFDLEtBQUQ7SUFDUixJQUFHLENBQUksT0FBSixJQUFnQixLQUFLLENBQUMsTUFBTixLQUFnQixXQUFuQztlQUNJLE1BQUEsR0FBUyxNQURiOztBQURROztBQUlaLFVBQUEsR0FBYSxTQUFDLEtBQUQ7SUFDVCxJQUFHLENBQUksT0FBUDtlQUNJLE1BQUEsR0FBUyxLQURiOztBQURTOztBQVViLElBQUEsR0FBWSxTQUFBO1dBQUcsYUFBYSxDQUFDLGFBQWQsQ0FBQSxDQUE2QixDQUFDLElBQTlCLENBQW1DLFNBQUMsQ0FBRCxFQUFHLENBQUg7ZUFBUyxDQUFDLENBQUMsRUFBRixHQUFPLENBQUMsQ0FBQztJQUFsQixDQUFuQztBQUFIOztBQUNaLFNBQUEsR0FBWSxTQUFBO1dBQUcsYUFBYSxDQUFDLGdCQUFkLENBQUE7QUFBSDs7QUFDWixPQUFBLEdBQVksU0FBQTtXQUFHLElBQUEsQ0FBQSxDQUFNLENBQUMsTUFBUCxDQUFjLFNBQUMsQ0FBRDtlQUFPLENBQUEsS0FBSztJQUFaLENBQWQ7QUFBSDs7QUFDWixTQUFBLEdBQVksU0FBQyxFQUFEO1dBQVEsYUFBYSxDQUFDLE1BQWQsQ0FBcUIsRUFBckI7QUFBUjs7QUFFWixXQUFBLEdBQWMsU0FBQyxLQUFELEVBQVEsU0FBUjtBQUVWLFFBQUE7SUFBQSxNQUFBLEdBQVMsU0FBQSxDQUFVLEtBQVY7SUFDVCxFQUFBLEdBQUssTUFBTSxDQUFDLFNBQVAsQ0FBQTtJQUNMLEVBQUEsR0FBSyxPQUFBLENBQUEsQ0FBUyxDQUFDLE1BQVYsQ0FBaUIsU0FBQyxDQUFEO2VBQU8sQ0FBQSxLQUFLO0lBQVosQ0FBakI7SUFDTCxFQUFBLEdBQUssRUFBRSxDQUFDLE1BQUgsQ0FBVSxTQUFDLENBQUQ7QUFDWCxZQUFBO1FBQUEsQ0FBQSxHQUFJLENBQUMsQ0FBQyxTQUFGLENBQUE7QUFDSixnQkFBTyxTQUFQO0FBQUEsaUJBQ1MsT0FEVDt1QkFDc0IsQ0FBQyxDQUFDLENBQUYsSUFBTyxFQUFFLENBQUMsQ0FBSCxHQUFLLEVBQUUsQ0FBQztBQURyQyxpQkFFUyxNQUZUO3VCQUVzQixDQUFDLENBQUMsQ0FBRixJQUFPLEVBQUUsQ0FBQyxDQUFILEdBQUssRUFBRSxDQUFDO0FBRnJDLGlCQUdTLE1BSFQ7dUJBR3NCLEVBQUUsQ0FBQyxDQUFILElBQVEsQ0FBQyxDQUFDLENBQUYsR0FBSSxDQUFDLENBQUM7QUFIcEMsaUJBSVMsSUFKVDt1QkFJc0IsRUFBRSxDQUFDLENBQUgsSUFBUSxDQUFDLENBQUMsQ0FBRixHQUFJLENBQUMsQ0FBQztBQUpwQztJQUZXLENBQVY7SUFRTCxJQUFpQixLQUFBLENBQU0sRUFBTixDQUFqQjtBQUFBLGVBQU8sT0FBUDs7SUFFQSxFQUFFLENBQUMsSUFBSCxDQUFRLFNBQUMsQ0FBRCxFQUFHLENBQUg7QUFDSixZQUFBO1FBQUEsRUFBQSxHQUFLLENBQUMsQ0FBQyxTQUFGLENBQUE7UUFDTCxFQUFBLEdBQUssQ0FBQyxDQUFDLFNBQUYsQ0FBQTtBQUNMLGdCQUFPLFNBQVA7QUFBQSxpQkFDUyxPQURUO2dCQUVRLENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQUMsRUFBRSxDQUFDLENBQUgsR0FBSyxFQUFFLENBQUMsTUFBSCxHQUFVLENBQWhCLENBQUEsR0FBcUIsQ0FBQyxFQUFFLENBQUMsQ0FBSCxHQUFLLEVBQUUsQ0FBQyxNQUFILEdBQVUsQ0FBaEIsQ0FBOUIsQ0FBQSxHQUFvRCxDQUFDLEVBQUUsQ0FBQyxDQUFILEdBQU8sRUFBRSxDQUFDLENBQVg7Z0JBQ3hELENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQUMsRUFBRSxDQUFDLENBQUgsR0FBSyxFQUFFLENBQUMsTUFBSCxHQUFVLENBQWhCLENBQUEsR0FBcUIsQ0FBQyxFQUFFLENBQUMsQ0FBSCxHQUFLLEVBQUUsQ0FBQyxNQUFILEdBQVUsQ0FBaEIsQ0FBOUIsQ0FBQSxHQUFvRCxDQUFDLEVBQUUsQ0FBQyxDQUFILEdBQU8sRUFBRSxDQUFDLENBQVg7QUFGdkQ7QUFEVCxpQkFJUyxNQUpUO2dCQUtRLENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQUMsRUFBRSxDQUFDLENBQUgsR0FBSyxFQUFFLENBQUMsTUFBSCxHQUFVLENBQWhCLENBQUEsR0FBcUIsQ0FBQyxFQUFFLENBQUMsQ0FBSCxHQUFLLEVBQUUsQ0FBQyxNQUFILEdBQVUsQ0FBaEIsQ0FBOUIsQ0FBQSxHQUFvRCxDQUFDLEVBQUUsQ0FBQyxDQUFILEdBQU8sRUFBRSxDQUFDLENBQVg7Z0JBQ3hELENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQUMsRUFBRSxDQUFDLENBQUgsR0FBSyxFQUFFLENBQUMsTUFBSCxHQUFVLENBQWhCLENBQUEsR0FBcUIsQ0FBQyxFQUFFLENBQUMsQ0FBSCxHQUFLLEVBQUUsQ0FBQyxNQUFILEdBQVUsQ0FBaEIsQ0FBOUIsQ0FBQSxHQUFvRCxDQUFDLEVBQUUsQ0FBQyxDQUFILEdBQU8sRUFBRSxDQUFDLENBQVg7QUFGdkQ7QUFKVCxpQkFPUyxNQVBUO2dCQVFRLENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQUMsRUFBRSxDQUFDLENBQUgsR0FBSyxFQUFFLENBQUMsS0FBSCxHQUFTLENBQWYsQ0FBQSxHQUFvQixDQUFDLEVBQUUsQ0FBQyxDQUFILEdBQUssRUFBRSxDQUFDLEtBQUgsR0FBUyxDQUFmLENBQTdCLENBQUEsR0FBa0QsQ0FBQyxFQUFFLENBQUMsQ0FBSCxHQUFPLEVBQUUsQ0FBQyxDQUFYO2dCQUN0RCxDQUFBLEdBQUksSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFILEdBQUssRUFBRSxDQUFDLEtBQUgsR0FBUyxDQUFmLENBQUEsR0FBb0IsQ0FBQyxFQUFFLENBQUMsQ0FBSCxHQUFLLEVBQUUsQ0FBQyxLQUFILEdBQVMsQ0FBZixDQUE3QixDQUFBLEdBQWtELENBQUMsRUFBRSxDQUFDLENBQUgsR0FBTyxFQUFFLENBQUMsQ0FBWDtBQUZyRDtBQVBULGlCQVVTLElBVlQ7Z0JBV1EsQ0FBQSxHQUFJLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBSCxHQUFLLEVBQUUsQ0FBQyxLQUFILEdBQVMsQ0FBZixDQUFBLEdBQW9CLENBQUMsRUFBRSxDQUFDLENBQUgsR0FBSyxFQUFFLENBQUMsS0FBSCxHQUFTLENBQWYsQ0FBN0IsQ0FBQSxHQUFrRCxDQUFDLEVBQUUsQ0FBQyxDQUFILEdBQU8sRUFBRSxDQUFDLENBQVg7Z0JBQ3RELENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQUMsRUFBRSxDQUFDLENBQUgsR0FBSyxFQUFFLENBQUMsS0FBSCxHQUFTLENBQWYsQ0FBQSxHQUFvQixDQUFDLEVBQUUsQ0FBQyxDQUFILEdBQUssRUFBRSxDQUFDLEtBQUgsR0FBUyxDQUFmLENBQTdCLENBQUEsR0FBa0QsQ0FBQyxFQUFFLENBQUMsQ0FBSCxHQUFPLEVBQUUsQ0FBQyxDQUFYO0FBWjlEO2VBYUEsQ0FBQSxHQUFFO0lBaEJFLENBQVI7V0FpQkEsRUFBRyxDQUFBLENBQUE7QUFoQ08iLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcbjAwICAgICAwMCAgIDAwMDAwMDAgICAwMDAgIDAwMCAgIDAwMFxuMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwMCAgMDAwXG4wMDAwMDAwMDAgIDAwMDAwMDAwMCAgMDAwICAwMDAgMCAwMDBcbjAwMCAwIDAwMCAgMDAwICAgMDAwICAwMDAgIDAwMCAgMDAwMFxuMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwICAgMDAwXG4jIyNcblxueyBwb3N0LCBwcmVmcywgc2xhc2gsIGNsYW1wLCBlbXB0eSwga2xvZywgYXBwLCBvcyB9ID0gcmVxdWlyZSAna3hrJ1xuXG5Cb3VuZHMgICA9IHJlcXVpcmUgJy4vYm91bmRzJ1xuZWxlY3Ryb24gPSByZXF1aXJlICdlbGVjdHJvbidcbkJyb3dzZXJXaW5kb3cgPSBlbGVjdHJvbi5Ccm93c2VyV2luZG93XG5cbmthY2hlbFNpemVzID0gWzcyLDEwOCwxNDQsMjE2XVxua2FjaGVsU2l6ZSAgPSAxXG5tYWluV2luID0gbnVsbFxuXG53aW5FdmVudHMgPSAod2luKSAtPlxuICAgIHdpbi5vbiAnZm9jdXMnICBvbldpbkZvY3VzXG4gICAgd2luLm9uICdibHVyJyAgIG9uV2luQmx1clxuICAgIHdpbi5zZXRIYXNTaGFkb3cgZmFsc2VcbiAgICBcbnNob3J0Y3V0ID0gc2xhc2gud2luKCkgYW5kICdjdHJsK2FsdCtrJyBvciAnY29tbWFuZCthbHQraydcblxuS2FjaGVsQXBwID0gbmV3IGFwcFxuICAgIGRpcjogICAgICAgICAgICAgICAgX19kaXJuYW1lXG4gICAgcGtnOiAgICAgICAgICAgICAgICByZXF1aXJlICcuLi9wYWNrYWdlLmpzb24nXG4gICAgc2hvcnRjdXQ6ICAgICAgICAgICBzaG9ydGN1dFxuICAgIGluZGV4OiAgICAgICAgICAgICAgJ21haW53aW4uaHRtbCdcbiAgICBpY29uOiAgICAgICAgICAgICAgICcuLi9pbWcvYXBwLmljbydcbiAgICB0cmF5OiAgICAgICAgICAgICAgICcuLi9pbWcvbWVudS5wbmcnXG4gICAgYWJvdXQ6ICAgICAgICAgICAgICAnLi4vaW1nL2Fib3V0LnBuZydcbiAgICBtaW5XaWR0aDogICAgICAgICAgIDUwXG4gICAgbWluSGVpZ2h0OiAgICAgICAgICA1MFxuICAgIG1heFdpZHRoOiAgICAgICAgICAgNTBcbiAgICBtYXhIZWlnaHQ6ICAgICAgICAgIDUwXG4gICAgd2lkdGg6ICAgICAgICAgICAgICA1MFxuICAgIGhlaWdodDogICAgICAgICAgICAgNTBcbiAgICBhY2NlcHRGaXJzdE1vdXNlOiAgIHRydWVcbiAgICBwcmVmc1NlcGVyYXRvcjogICAgICfilrgnXG4gICAgb25PdGhlckluc3RhbmNlOiAgICAtPiBwb3N0LmVtaXQgJ3JhaXNlS2FjaGVsbidcbiAgICBvblNob3J0Y3V0OiAgICAgICAgIC0+IHBvc3QuZW1pdCAncmFpc2VLYWNoZWxuJ1xuICAgIHJlc2l6YWJsZTogICAgICAgICAgZmFsc2UgI3RydWVcbiAgICBtYXhpbWl6YWJsZTogICAgICAgIGZhbHNlXG4gICAgc2F2ZUJvdW5kczogICAgICAgICBmYWxzZVxuICAgIG9uV2luUmVhZHk6ICh3aW4pIC0+XG4gICAgICAgIFxuICAgICAgICBtYWluV2luID0gd2luXG4gICAgICAgIHdpbkV2ZW50cyB3aW5cbiAgICAgICAgXG4gICAgICAgIGZvciBrYWNoZWxJZCxrYWNoZWxEYXRhIG9mIHByZWZzLmdldCAna2FjaGVsbicge31cbiAgICAgICAgICAgIGlmIGthY2hlbElkIG5vdCBpbiBbJ2FwcGwnICdmb2xkZXInXVxuICAgICAgICAgICAgICAgIHBvc3QuZW1pdCAnbmV3S2FjaGVsJyBrYWNoZWxEYXRhXG5cbiMgMDAwICAgMDAwICAgMDAwMDAwMCAgICAwMDAwMDAwICAwMDAgICAwMDAgIDAwMDAwMDAwICAwMDAgICAgICBcbiMgMDAwICAwMDAgICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAgICBcbiMgMDAwMDAwMCAgICAwMDAwMDAwMDAgIDAwMCAgICAgICAwMDAwMDAwMDAgIDAwMDAwMDAgICAwMDAgICAgICBcbiMgMDAwICAwMDAgICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAgICBcbiMgMDAwICAgMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICAwMDAgICAwMDAgIDAwMDAwMDAwICAwMDAwMDAwICBcblxucG9zdC5vbiAnbmV3S2FjaGVsJyAoaHRtbDonZGVmYXVsdCcsIGRhdGE6KSAtPlxuXG4gICAgd2luID0gbmV3IGVsZWN0cm9uLkJyb3dzZXJXaW5kb3dcbiAgICAgICAgXG4gICAgICAgIG1vdmFibGU6ICAgICAgICAgICAgdHJ1ZVxuICAgICAgICB0cmFuc3BhcmVudDogICAgICAgIHRydWVcbiAgICAgICAgYXV0b0hpZGVNZW51QmFyOiAgICB0cnVlXG4gICAgICAgIGFjY2VwdEZpcnN0TW91c2U6ICAgdHJ1ZVxuICAgICAgICB0cmFuc3BhcmVudDogICAgICAgIHRydWVcbiAgICAgICAgaGFzU2hhZG93OiAgICAgICAgICBmYWxzZVxuICAgICAgICBmcmFtZTogICAgICAgICAgICAgIGZhbHNlXG4gICAgICAgIHJlc2l6YWJsZTogICAgICAgICAgZmFsc2VcbiAgICAgICAgbWF4aW1pemFibGU6ICAgICAgICBmYWxzZVxuICAgICAgICBtaW5pbWl6YWJsZTogICAgICAgIGZhbHNlXG4gICAgICAgIGZ1bGxzY3JlZW46ICAgICAgICAgZmFsc2VcbiAgICAgICAgc2hvdzogICAgICAgICAgICAgICBmYWxzZVxuICAgICAgICBmdWxsc2NyZWVuZW5hYmxlOiAgIGZhbHNlXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogICAgJyMxODE4MTgnXG4gICAgICAgIHdpZHRoOiAgICAgICAgICAgICAga2FjaGVsU2l6ZXNba2FjaGVsU2l6ZV1cbiAgICAgICAgaGVpZ2h0OiAgICAgICAgICAgICBrYWNoZWxTaXplc1trYWNoZWxTaXplXVxuICAgICAgICB3ZWJQcmVmZXJlbmNlczogICBcbiAgICAgICAgICAgIG5vZGVJbnRlZ3JhdGlvbjogdHJ1ZVxuICAgIFxuICAgIHdpbi5sb2FkVVJMIFwiZmlsZTovLyN7X19kaXJuYW1lfS8uLi9qcy8je2h0bWx9Lmh0bWxcIlxuICAgIFxuICAgIHdpbi53ZWJDb250ZW50cy5vbiAnZG9tLXJlYWR5JyAoZXZlbnQpIC0+XG4gICAgICAgIHBvc3QudG9XaW4gd2luLmlkLCAnaW5pdERhdGEnIGRhdGEgaWYgZGF0YT9cbiAgICAgICAgd2luLnNob3coKVxuICAgICAgICBcbiAgICB3aW5FdmVudHMgd2luXG4gICAgd2luXG4gICAgICAgIFxuIyAgMDAwMDAwMCAgIDAwMDAwMDAwICAgMDAwMDAwMDAgICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgIDAwMDAwMDAgICAwMDAwMDAwMCAgXG4jIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwMCAgMDAwICAwMDAgICAgICAgIDAwMCAgICAgICBcbiMgMDAwMDAwMDAwICAwMDAwMDAwICAgIDAwMDAwMDAgICAgMDAwMDAwMDAwICAwMDAgMCAwMDAgIDAwMCAgMDAwMCAgMDAwMDAwMCAgIFxuIyAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgXG4jIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAgMDAwMDAwMCAgIDAwMDAwMDAwICBcblxucG9zdC5vbiAnYXJyYW5nZScgLT4gQm91bmRzLmFycmFuZ2Uga2FjaGVsbigpXG5cbnBvc3Qub24gJ3NuYXBLYWNoZWwnICh3aWQpIC0+IEJvdW5kcy5zbmFwIGthY2hlbG4oKSwgd2luV2l0aElkIHdpZFxuXG4jICAwMDAwMDAwICAwMDAgIDAwMDAwMDAgIDAwMDAwMDAwICBcbiMgMDAwICAgICAgIDAwMCAgICAgMDAwICAgMDAwICAgICAgIFxuIyAwMDAwMDAwICAgMDAwICAgIDAwMCAgICAwMDAwMDAwICAgXG4jICAgICAgMDAwICAwMDAgICAwMDAgICAgIDAwMCAgICAgICBcbiMgMDAwMDAwMCAgIDAwMCAgMDAwMDAwMCAgMDAwMDAwMDAgIFxuXG5wb3N0Lm9uICdrYWNoZWxTaXplJyAoYWN0aW9uLCB3aWQpIC0+XG4gICAgXG4gICAgaWYgd2lkXG4gICAgICAgIHNpemUgPSAwXG4gICAgICAgIHdoaWxlIGthY2hlbFNpemVzW3NpemVdIDwgd2luV2l0aElkKHdpZCkuZ2V0Qm91bmRzKCkud2lkdGhcbiAgICAgICAgICAgIHNpemUrK1xuICAgIGVsc2VcbiAgICAgICAgc2l6ZSA9IGthY2hlbFNpemVcbiAgICBcbiAgICBzd2l0Y2ggYWN0aW9uXG4gICAgICAgIHdoZW4gJ2luY3JlYXNlJyB0aGVuIHNpemUgKz0gMVxuICAgICAgICB3aGVuICdkZWNyZWFzZScgdGhlbiBzaXplIC09IDFcbiAgICAgICAgd2hlbiAncmVzZXQnICAgIHRoZW4gc2l6ZSAgPSAxXG4gICBcbiAgICBzaXplID0gY2xhbXAgMCBrYWNoZWxTaXplcy5sZW5ndGgtMSBzaXplXG4gICAgICAgIFxuICAgIGlmIHdpZFxuICAgICAgICBrID0gW3dpbldpdGhJZCB3aWRdXG4gICAgZWxzZVxuICAgICAgICBrID0ga2FjaGVsbigpXG4gICAgICAgIGthY2hlbFNpemUgPSBzaXplXG4gICAgXG4gICAgZm9yIHcgaW4ga1xuICAgICAgICBiID0gdy5nZXRCb3VuZHMoKVxuICAgICAgICBiLndpZHRoICA9IGthY2hlbFNpemVzW3NpemVdXG4gICAgICAgIGIuaGVpZ2h0ID0ga2FjaGVsU2l6ZXNbc2l6ZV1cbiAgICAgICAgdy5zZXRCb3VuZHMgYlxuICAgICAgICBCb3VuZHMuc25hcCBrYWNoZWxuKCksIHdcbiAgICAgICAgXG4jIDAwMDAwMDAwICAgIDAwMDAwMDAgICAwMDAgICAwMDAwMDAwICAwMDAwMDAwMFxuIyAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAwMDAgICAgICAgMDAwICAgICBcbiMgMDAwMDAwMCAgICAwMDAwMDAwMDAgIDAwMCAgMDAwMDAwMCAgIDAwMDAwMDAgXG4jIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAwMDAgICAgIFxuIyAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAwMDAwMDAwICAgMDAwMDAwMDBcblxucmFpc2VkICA9IGZhbHNlXG5yYWlzaW5nID0gZmFsc2VcbiAgICAgICAgXG5wb3N0Lm9uICdyYWlzZUthY2hlbG4nIC0+XG4gICAgXG4gICAgZm9yIHdpbiBpbiBrYWNoZWxuKClcbiAgICAgICAgaWYgbm90IHdpbi5pc1Zpc2libGUoKVxuICAgICAgICAgICAgcmFpc2VkID0gZmFsc2VcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICBcbiAgICByYWlzaW5nID0gdHJ1ZVxuICAgIGlmIHJhaXNlZFxuICAgICAgICBmb3Igd2luIGluIGthY2hlbG4oKVxuICAgICAgICAgICAgd2luLmhpZGUoKVxuICAgICAgICByYWlzZWQgID0gZmFsc2VcbiAgICAgICAgcmFpc2luZyA9IGZhbHNlXG4gICAgICAgIHJldHVyblxuICAgICAgICBcbiAgICBmb3Igd2luIGluIGthY2hlbG4oKS5jb25jYXQgW21haW5XaW5dXG4gICAgICAgIGlmIG9zLnBsYXRmb3JtKCkgPT0gJ3dpbjMyJ1xuICAgICAgICAgICAgcmFpc2VXaW4gd2luXG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHdpbi5zaG93SW5hY3RpdmUoKVxuICAgIHJhaXNlZCA9IHRydWVcbiAgICByYWlzZVdpbiBmb2N1c0thY2hlbCA/IG1haW5XaW5cbiAgICByYWlzaW5nID0gZmFsc2VcbiAgICBcbnJhaXNlV2luID0gKHdpbikgLT5cbiAgICB3aW4uc2hvd0luYWN0aXZlKClcbiAgICB3aW4uZm9jdXMoKVxuXG5wb3N0Lm9uICdxdWl0JyBLYWNoZWxBcHAucXVpdEFwcFxuXG4jIDAwMDAwMDAwICAgMDAwMDAwMCAgICAwMDAwMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICBcbiMgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgICAgIFxuIyAwMDAwMDAgICAgMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAgMDAwICAwMDAwMDAwICAgXG4jIDAwMCAgICAgICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAwMDAgICAgICAgMDAwICBcbiMgMDAwICAgICAgICAwMDAwMDAwICAgIDAwMDAwMDAgICAwMDAwMDAwICAgMDAwMDAwMCAgIFxuXG5wb3N0Lm9uICdmb2N1c0thY2hlbCcgKHdpbklkLCBkaXJlY3Rpb24pIC0+IHJhaXNlV2luIG5laWdoYm9yV2luIHdpbklkLCBkaXJlY3Rpb25cbiAgIFxuZm9jdXNLYWNoZWwgPSBudWxsXG5wb3N0Lm9uICdrYWNoZWxGb2N1cycgKHdpbklkKSAtPiBcbiAgICBpZiB3aW5JZCAhPSBtYWluV2luLmlkIGFuZCBub3QgcmFpc2luZ1xuICAgICAgICBmb2N1c0thY2hlbCA9IHdpbldpdGhJZCB3aW5JZFxuICAgICAgICBcbm9uV2luQmx1ciA9IChldmVudCkgLT4gXG4gICAgaWYgbm90IHJhaXNpbmcgYW5kIGV2ZW50LnNlbmRlciA9PSBmb2N1c0thY2hlbFxuICAgICAgICByYWlzZWQgPSBmYWxzZVxuXG5vbldpbkZvY3VzID0gKGV2ZW50KSAtPiBcbiAgICBpZiBub3QgcmFpc2luZ1xuICAgICAgICByYWlzZWQgPSB0cnVlXG4gICAgICAgIFxuIyAwMDAgICAwMDAgIDAwMCAgMDAwICAgMDAwICAgMDAwMDAwMCAgXG4jIDAwMCAwIDAwMCAgMDAwICAwMDAwICAwMDAgIDAwMCAgICAgICBcbiMgMDAwMDAwMDAwICAwMDAgIDAwMCAwIDAwMCAgMDAwMDAwMCAgIFxuIyAwMDAgICAwMDAgIDAwMCAgMDAwICAwMDAwICAgICAgIDAwMCAgXG4jIDAwICAgICAwMCAgMDAwICAwMDAgICAwMDAgIDAwMDAwMDAgICBcblxud2lucyAgICAgID0gLT4gQnJvd3NlcldpbmRvdy5nZXRBbGxXaW5kb3dzKCkuc29ydCAoYSxiKSAtPiBhLmlkIC0gYi5pZFxuYWN0aXZlV2luID0gLT4gQnJvd3NlcldpbmRvdy5nZXRGb2N1c2VkV2luZG93KClcbmthY2hlbG4gICA9IC0+IHdpbnMoKS5maWx0ZXIgKHcpIC0+IHcgIT0gbWFpbldpblxud2luV2l0aElkID0gKGlkKSAtPiBCcm93c2VyV2luZG93LmZyb21JZCBpZFxuICAgIFxubmVpZ2hib3JXaW4gPSAod2luSWQsIGRpcmVjdGlvbikgLT5cbiAgICBcbiAgICBrYWNoZWwgPSB3aW5XaXRoSWQgd2luSWRcbiAgICBrYiA9IGthY2hlbC5nZXRCb3VuZHMoKVxuICAgIGtzID0ga2FjaGVsbigpLmZpbHRlciAoaykgLT4gayAhPSBrYWNoZWxcbiAgICBrcyA9IGtzLmZpbHRlciAoaykgLT5cbiAgICAgICAgYiA9IGsuZ2V0Qm91bmRzKClcbiAgICAgICAgc3dpdGNoIGRpcmVjdGlvblxuICAgICAgICAgICAgd2hlbiAncmlnaHQnIHRoZW4gYi54ID49IGtiLngra2Iud2lkdGhcbiAgICAgICAgICAgIHdoZW4gJ2Rvd24nICB0aGVuIGIueSA+PSBrYi55K2tiLmhlaWdodFxuICAgICAgICAgICAgd2hlbiAnbGVmdCcgIHRoZW4ga2IueCA+PSBiLngrYi53aWR0aCBcbiAgICAgICAgICAgIHdoZW4gJ3VwJyAgICB0aGVuIGtiLnkgPj0gYi55K2IuaGVpZ2h0XG5cbiAgICByZXR1cm4ga2FjaGVsIGlmIGVtcHR5IGtzXG4gICAgICAgICAgICBcbiAgICBrcy5zb3J0IChhLGIpIC0+XG4gICAgICAgIGFiID0gYS5nZXRCb3VuZHMoKVxuICAgICAgICBiYiA9IGIuZ2V0Qm91bmRzKClcbiAgICAgICAgc3dpdGNoIGRpcmVjdGlvblxuICAgICAgICAgICAgd2hlbiAncmlnaHQnIFxuICAgICAgICAgICAgICAgIGEgPSBNYXRoLmFicygoa2IueStrYi5oZWlnaHQvMikgLSAoYWIueSthYi5oZWlnaHQvMikpICsgKGFiLnggLSBrYi54KVxuICAgICAgICAgICAgICAgIGIgPSBNYXRoLmFicygoa2IueStrYi5oZWlnaHQvMikgLSAoYmIueStiYi5oZWlnaHQvMikpICsgKGJiLnggLSBrYi54KVxuICAgICAgICAgICAgd2hlbiAnbGVmdCcgIFxuICAgICAgICAgICAgICAgIGEgPSBNYXRoLmFicygoa2IueStrYi5oZWlnaHQvMikgLSAoYWIueSthYi5oZWlnaHQvMikpICsgKGtiLnggLSBhYi54KVxuICAgICAgICAgICAgICAgIGIgPSBNYXRoLmFicygoa2IueStrYi5oZWlnaHQvMikgLSAoYmIueStiYi5oZWlnaHQvMikpICsgKGtiLnggLSBiYi54KVxuICAgICAgICAgICAgd2hlbiAnZG93bicgIFxuICAgICAgICAgICAgICAgIGEgPSBNYXRoLmFicygoa2IueCtrYi53aWR0aC8yKSAtIChhYi54K2FiLndpZHRoLzIpKSArIChhYi55IC0ga2IueSlcbiAgICAgICAgICAgICAgICBiID0gTWF0aC5hYnMoKGtiLngra2Iud2lkdGgvMikgLSAoYmIueCtiYi53aWR0aC8yKSkgKyAoYmIueSAtIGtiLnkpXG4gICAgICAgICAgICB3aGVuICd1cCcgICAgXG4gICAgICAgICAgICAgICAgYSA9IE1hdGguYWJzKChrYi54K2tiLndpZHRoLzIpIC0gKGFiLngrYWIud2lkdGgvMikpICsgKGtiLnkgLSBhYi55KVxuICAgICAgICAgICAgICAgIGIgPSBNYXRoLmFicygoa2IueCtrYi53aWR0aC8yKSAtIChiYi54K2JiLndpZHRoLzIpKSArIChrYi55IC0gYmIueSlcbiAgICAgICAgYS1iXG4gICAga3NbMF1cbiAgICAgIl19
//# sourceURL=../coffee/main.coffee