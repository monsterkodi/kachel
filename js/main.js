// koffee 1.3.0

/*
00     00   0000000   000  000   000
000   000  000   000  000  0000  000
000000000  000000000  000  000 0 000
000 0 000  000   000  000  000  0000
000   000  000   000  000  000   000
 */
var Bounds, BrowserWindow, KachelApp, activeWin, app, clamp, electron, hide, kachelSize, kachelSizes, kacheln, klog, loadKacheln, mainWin, onArrange, onFocusKachel, onHideKacheln, onKachelSize, onNewKachel, onRaiseKacheln, onWinBlur, onWinFocus, post, prefs, raise, raised, raising, ref, relWin, shortcut, slash, winEvents, winWithId, wins;

ref = require('kxk'), post = ref.post, prefs = ref.prefs, slash = ref.slash, clamp = ref.clamp, klog = ref.klog, app = ref.app;

Bounds = require('./bounds');

electron = require('electron');

BrowserWindow = electron.BrowserWindow;

kachelSizes = [72, 108, 144, 216];

kachelSize = 1;

mainWin = null;

winEvents = function(win) {
    win.on('focus', onWinFocus);
    win.on('blur', onWinBlur);
    return win.setHasShadow(false);
};

shortcut = slash.win() && 'ctrl+alt+k' || 'command+alt+k';

KachelApp = new app({
    dir: __dirname,
    pkg: require('../package.json'),
    shortcut: shortcut,
    index: 'mainwin.html',
    icon: '../img/app.ico',
    tray: '../img/menu.png',
    about: '../img/about.png',
    minWidth: 50,
    minHeight: 50,
    maxWidth: 50,
    maxHeight: 50,
    width: 50,
    height: 50,
    acceptFirstMouse: true,
    resizable: false,
    maximizable: false,
    saveBounds: false,
    onWinReady: function(win) {
        mainWin = win;
        winEvents(win);
        return loadKacheln();
    }
});

loadKacheln = function() {
    var kachelData, kachelId, ref1, results;
    ref1 = prefs.get('kacheln', {});
    results = [];
    for (kachelId in ref1) {
        kachelData = ref1[kachelId];
        if (kachelId !== 'appl') {
            results.push(onNewKachel(kachelData));
        } else {
            results.push(void 0);
        }
    }
    return results;
};

onNewKachel = function(arg) {
    var data, html, ref1, ref2, win;
    html = (ref1 = arg.html) != null ? ref1 : 'default', data = (ref2 = arg.data) != null ? ref2 : null;
    win = new electron.BrowserWindow({
        movable: true,
        transparent: true,
        autoHideMenuBar: true,
        acceptFirstMouse: true,
        hasShadow: false,
        frame: false,
        resizable: false,
        maximizable: false,
        minimizable: false,
        fullscreen: false,
        show: false,
        transparent: false,
        fullscreenenable: false,
        backgroundColor: '#181818',
        width: kachelSizes[kachelSize],
        height: kachelSizes[kachelSize],
        webPreferences: {
            nodeIntegration: true
        }
    });
    win.loadURL("file://" + __dirname + "/../js/" + html + ".html");
    win.webContents.on('dom-ready', function(event) {
        if (data != null) {
            post.toWin(win.id, 'initData', data);
        }
        return win.show();
    });
    winEvents(win);
    return win;
};

post.on('newKachel', onNewKachel);

onArrange = function() {
    return Bounds.arrange(kacheln());
};

post.on('arrange', onArrange);

onKachelSize = function(action, wid) {
    var b, i, k, len, size, w;
    if (wid) {
        size = 0;
        while (kachelSizes[size] < winWithId(wid).getBounds().width) {
            size++;
        }
    } else {
        size = kachelSize;
    }
    switch (action) {
        case 'increase':
            size += 1;
            break;
        case 'decrease':
            size -= 1;
            break;
        case 'reset':
            size = 1;
    }
    size = clamp(0, kachelSizes.length - 1, size);
    if (wid) {
        k = [winWithId(wid)];
    } else {
        k = kacheln();
        kachelSize = size;
    }
    for (i = 0, len = k.length; i < len; i++) {
        w = k[i];
        b = w.getBounds();
        b.width = kachelSizes[size];
        b.height = kachelSizes[size];
        w.setBounds(b);
    }
    return onArrange();
};

post.on('kachelSize', onKachelSize);

raised = false;

raising = false;

raise = function(win) {
    win.showInactive();
    return win.focus();
};

hide = function(win) {
    return win.hide();
};

onWinBlur = function(event) {
    if (event.sender === mainWin) {
        return raised = false;
    }
};

onWinFocus = function(event) {
    if (event.sender === mainWin) {
        if (!raised && !raising) {
            return onRaiseKacheln();
        } else if (raising) {
            raised = true;
            return raising = false;
        }
    }
};

onHideKacheln = function() {
    var i, len, ref1, win;
    ref1 = kacheln();
    for (i = 0, len = ref1.length; i < len; i++) {
        win = ref1[i];
        hide(win);
    }
    return raised = false;
};

onRaiseKacheln = function() {
    var i, len, ref1, win;
    if (raised) {
        onHideKacheln();
        return;
    }
    raising = true;
    ref1 = kacheln();
    for (i = 0, len = ref1.length; i < len; i++) {
        win = ref1[i];
        raise(win);
    }
    raised = true;
    return raise(mainWin);
};

post.on('raiseKacheln', onRaiseKacheln);

post.on('quit', KachelApp.quitApp);

onFocusKachel = function(winId, direction) {
    switch (direction) {
        case 'left':
        case 'up':
            return raise(relWin(winId, -1));
        case 'right':
        case 'down':
            return raise(relWin(winId, 1));
    }
};

post.on('focusKachel', onFocusKachel);

wins = function() {
    return BrowserWindow.getAllWindows().sort(function(a, b) {
        return a.id - b.id;
    });
};

activeWin = function() {
    return BrowserWindow.getFocusedWindow();
};

kacheln = function() {
    return wins().filter(function(w) {
        return w !== mainWin;
    });
};

winWithId = function(id) {
    return BrowserWindow.fromId(id);
};

relWin = function(winId, delta) {
    var w, wi, wl;
    wl = wins();
    w = BrowserWindow.fromId(winId);
    wi = wl.indexOf(w);
    return wl[(wl.length + wi + delta) % wl.length];
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/main.coffee