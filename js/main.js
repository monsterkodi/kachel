// koffee 1.2.0

/*
00     00   0000000   000  000   000
000   000  000   000  000  0000  000
000000000  000000000  000  000 0 000
000 0 000  000   000  000  000  0000
000   000  000   000  000  000   000
 */
var BrowserWindow, KachelApp, activeWin, app, electron, hide, kachelClosed, kachelSize, kacheln, mainWin, onFocusKachel, onHideKacheln, onNewKachel, onRaiseKacheln, onWinBlur, onWinFocus, post, prefs, raise, raised, raising, ref, relWin, saveBounds, shortcut, slash, winEvents, wins;

ref = require('kxk'), post = ref.post, prefs = ref.prefs, slash = ref.slash, app = ref.app;

electron = require('electron');

BrowserWindow = electron.BrowserWindow;

kachelSize = 150;

mainWin = null;

winEvents = function(win) {
    win.on('closed', kachelClosed);
    win.on('move', saveBounds);
    win.on('focus', onWinFocus);
    win.on('blur', onWinBlur);
    return win.setHasShadow(false);
};

shortcut = slash.win() && 'ctrl+alt+k' || 'command+alt+k';

KachelApp = new app({
    dir: __dirname,
    pkg: require('../package.json'),
    shortcut: shortcut,
    index: 'mainwin.html',
    icon: '../img/app.ico',
    tray: '../img/menu.png',
    about: '../img/about.png',
    minWidth: 50,
    minHeight: 50,
    maxWidth: 50,
    maxHeight: 50,
    width: 50,
    height: 50,
    resizable: true,
    maximizable: false,
    onWinReady: function(win) {
        mainWin = win;
        return winEvents(win);
    }
});

onNewKachel = function() {
    var win;
    win = new electron.BrowserWindow({
        movable: true,
        transparent: true,
        autoHideMenuBar: true,
        frame: false,
        resizable: false,
        maximizable: false,
        minimizable: false,
        fullscreen: false,
        show: false,
        transparent: false,
        fullscreenenable: false,
        backgroundColor: '#181818',
        width: kachelSize,
        height: kachelSize,
        minWidth: kachelSize,
        minHeight: kachelSize,
        maxWidth: kachelSize,
        maxHeight: kachelSize,
        webPreferences: {
            nodeIntegration: true
        }
    });
    win.loadURL("file://" + __dirname + "/../js/default.html");
    win.on('ready-to-show', function() {
        return win.show();
    });
    winEvents(win);
    return win;
};

post.on('newKachel', onNewKachel);

raised = false;

raising = false;

raise = function(win) {
    win.showInactive();
    return win.focus();
};

hide = function(win) {
    return win.hide();
};

onWinBlur = function(event) {
    if (event.sender === mainWin) {
        return raised = false;
    }
};

onWinFocus = function(event) {
    if (event.sender === mainWin) {
        if (!raised && !raising) {
            return onRaiseKacheln();
        } else if (raising) {
            raised = true;
            return raising = false;
        }
    }
};

onHideKacheln = function() {
    var i, len, ref1, win;
    ref1 = kacheln();
    for (i = 0, len = ref1.length; i < len; i++) {
        win = ref1[i];
        hide(win);
    }
    return raised = false;
};

onRaiseKacheln = function() {
    var i, len, ref1, win;
    if (raised) {
        onHideKacheln();
        return;
    }
    raising = true;
    ref1 = kacheln();
    for (i = 0, len = ref1.length; i < len; i++) {
        win = ref1[i];
        raise(win);
    }
    raised = true;
    return raise(mainWin);
};

post.on('raiseKacheln', onRaiseKacheln);

post.on('quit', KachelApp.quitApp);

onFocusKachel = function(winId, direction) {
    switch (direction) {
        case 'left':
        case 'up':
            return raise(relWin(winId, -1));
        case 'right':
        case 'down':
            return raise(relWin(winId, 1));
    }
};

post.on('focusKachel', onFocusKachel);

kachelClosed = function(event) {};

saveBounds = function(event) {
    return prefs.save();
};

wins = function() {
    return BrowserWindow.getAllWindows().sort(function(a, b) {
        return a.id - b.id;
    });
};

activeWin = function() {
    return BrowserWindow.getFocusedWindow();
};

kacheln = function() {
    return wins().filter(function(w) {
        return w !== mainWin;
    });
};

relWin = function(winId, delta) {
    var w, wi, wl;
    wl = wins();
    w = BrowserWindow.fromId(winId);
    wi = wl.indexOf(w);
    return wl[(wl.length + wi + delta) % wl.length];
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/main.coffee